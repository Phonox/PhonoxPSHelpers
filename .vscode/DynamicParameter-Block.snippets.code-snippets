{
  "DynamicParameter-Block-Simple": {
    "scope": "powershell",
    "body": [
      "",
      "    DynamicParam {",
      "        ",
      "        # Dynamic Param consists of these things, and then require nr 5 and 6.",
      "        # 1. Parameter Attribute",
      "        # 2. Attribute Collection",
      "        # 3. Runtime Defined Parameter",
      "        # 4. Runtime Defined Parameter Dictionary",
      "        \\$paramDictionary = New-Object System.Management.Automation.RuntimeDefinedParameterDictionary",
      "        # 5. [CmdletBinding()]",
      "        # 6. Process {  }",
      "    ",
      "        #region Parameter Nr X, aka COPY PASTE THIS TEMPLATE {",
      "            If (\\$SomeParameter) { # NOT REQUIRED",
      "",
      "            # 1",
      "            \\$attribute = New-Object System.Management.Automation.ParameterAttribute",
      "            \\$attribute.Position     = 1 # 1 is the second position",
      "            \\$attribute.Mandatory    = \\$true",
      "            \\$attribute.HelpMessage  = 'This was a helping message!'",
      "            \\$attribute.ValueFromPipelineByPropertyName = \\$true",
      "",
      "            # 2",
      "            \\$attributeCollection = New-Object System.Collections.ObjectModel.Collection[System.Attribute]",
      "            \\$attributeCollection.Add(\\$attribute)",
      "            ",
      "",
      "            # Add MORE VALIDATORS! (not required, but should be!)",
      "            \\$ValidateSet = @( Get-Process |Select-Object -expand Name | Sort-Object Name )",
      "            \\$attributeCollection.Add( (New-Object System.Management.Automation.ValidateSetAttribute( \\$ValidateSet ) ) )",
      "            ",
      "            # 3",
      "            # By specifying DataType, you can either check if it is this datatype, prase it to this datatype, ",
      "            # or if you have ParameterSets, it can switch AUTOMATICLY when it does not fit default",
      "            \\$NewParameterName   = 'PName'",
      "            \\$ParamDataType      = [array[]] # [string], [string[]], [system.what.ever]",
      "            \\$attributeParam     = New-object System.Management.Automation.RuntimeDefinedParameter(\\$NewParameterName,\\$ParamDataType,\\$attributeCollection)",
      "            ",
      "            # 4.add",
      "            \\$ParamDictionary.Add(\\$NewParameterName,\\$attributeParam)",
      "            } # end of if \\$SomeParameter",
      "        #endregion   } END OF Parameter Nr X",
      "",
      "        # Param Nr x+1 {}",
      "",
      "        return \\$paramDictionary",
      "    }",
      ""
    ],
    "description": "DynamicParam-Block which is all you need to start with DynamicParam",
    "prefix": [
      "DynamicParameter Block Simple",
      "Block",
      "Simple"
    ]
  }
}
